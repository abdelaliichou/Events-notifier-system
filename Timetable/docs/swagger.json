{
    "swagger": "2.0",
    "info": {
        "description": "API for managing events in the timetable",
        "title": "Events Timetable API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8090",
    "basePath": "/events",
    "paths": {
        "/events": {
            "get": {
                "description": "This endpoint returns an event by its unique ID",
                "tags": [
                    "events"
                ],
                "summary": "Search for an event by UID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event UID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Missing UID query parameter"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "500": {
                        "description": "Error fetching event"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Event": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        }
    }
}